---
- name: Configure | Dynamic | Check that Elasticsearch is started
  ansible.builtin.assert:
    that:
      - r_elasticsearch_info.started
    msg: "Please start first the product"

- name: Configure | Dynamic | Create automation user
  bartokit.elastic.elasticsearch_users:
    user: 'elastic'
    password: "{{ r_elasticsearch_users_elastic_password }}"
    ssl_verify: false
    users: "{{ {_r_elasticsearch_api_username:_r_elasticsearch_api_user}  | bartokit.elastic.dictofdict2listofdict('username') }}"
    mode: present
  run_once: true
  when: ('initial' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage users
  bartokit.elastic.elasticsearch_users:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    users: "{{ r_elasticsearch_users | bartokit.elastic.dictofdict2listofdict('username') }}"
    enforce_password: "{{ 'enforce_user_password' in r_elasticsearch_configure_actions}}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('users' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage ILM polices
  bartokit.elastic.elasticsearch_index_lifecycle_policies:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    skip_regexps: "{{ r_elasticsearch_ilm_policies_skip_regexp }}"
    policies: "{{ r_elasticsearch_ilm_policies }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('ilm_policies' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage component template
  bartokit.elastic.elasticsearch_component_templates:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    component_templates: "{{ r_elasticsearch_component_templates }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('component_template' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage index template
  bartokit.elastic.elasticsearch_index_templates:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    skip_regexps: "{{ r_elasticsearch_index_templates_skip_regexp }}"
    templates: "{{ r_elasticsearch_index_templates }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('index_template' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage beats index management
  bartokit.elastic.beat_index_management_setup:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    beats: "{{ r_elasticsearch_beat_index_management_setup }}"
  run_once: true
  when: ('beats_index_management' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage ingest pipelines
  bartokit.elastic.elasticsearch_ingest_pipelines:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    pipelines: "{{ r_elasticsearch_ingest_pipelines }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('ingest_pipelines' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage logstash pipelines
  bartokit.elastic.elasticsearch_logstash_pipelines:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    pipelines: "{{ r_elasticsearch_logstash_pipelines }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('logstash_pipelines' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage roles
  bartokit.elastic.elasticsearch_roles:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    roles: "{{ r_elasticsearch_roles }}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('roles' in r_elasticsearch_configure_actions)

- name: Configure | Dynamic | Manage role mappings
  bartokit.elastic.elasticsearch_role_mappings:
    user: '{{ _r_elasticsearch_api_username }}'
    password: "{{ r_elasticsearch_api_password }}"
    ssl_verify: false
    role_mappings: "{{ r_elasticsearch_role_mappings}}"
    mode: "{{ (r_elasticsearch_enforce | bool) | ternary('multiple','present') }}"
  run_once: true
  when: ('role_mappings' in r_elasticsearch_configure_actions)
