---
- name: Check that Elasticsearch is installed
  ansible.builtin.assert:
    that:
      - r_logstash_info.installed
    msg: "Please install first the product"

- name: Kernel parameters
  when: ('sysctl' in r_logstash_configure_actions)
  block:
    - ansible.posix.sysctl:
        name: vm.max_map_count
        value: '262144'
        sysctl_set: true
        state: present
        reload: true

- name: Folder management
  when: ('folders' in r_logstash_configure_actions)
  block:
    - name: Create needed folders
      ansible.builtin.file:
        state: directory
        path: "{{ _r_logstash_loop_folders.path }}"
        owner: "{{ _r_logstash_username }}"
        group: "{{ _r_logstash_group }}"
        mode: "{{ _r_logstash_loop_folders.mode }}"
      loop:
        - path: "{{ r_logstash_configuration.path.data }}"
          mode: '755'
      loop_control:
        loop_var: _r_logstash_loop_folders

- name: Main configuration files
  when: ('main_files' in r_logstash_configure_actions )
  block:
    - name: Write elasticsearch.yml configuration file
      ansible.builtin.template:
        src: logstash.yml.j2
        dest: "{{ _r_logstash_config_folder }}/logstash.yml"
        mode: 0660
        owner: root
        group: "{{ _r_logstash_group }}"
      notify:
        _r_logstash_configuration_changed

    - name: Write pipelines.yml configuration file
      ansible.builtin.template:
        src: pipelines.yml.j2
        dest: "{{ _r_logstash_config_folder }}/pipelines.yml"
        mode: 0660
        owner: root
        group: "{{ _r_logstash_group }}"
      notify:
        _r_logstash_configuration_changed

    - name: Write confd configuration file
      ansible.builtin.template:
        src: conf_d.yml.j2
        dest: "{{ _r_logstash_config_folder }}/conf.d/{{ __r_logstash_confd_item.key }}.conf"
        mode: 0660
        owner: root
        group: "{{ _r_logstash_group }}"
      loop: "{{ r_logstash_pipelines_confd | dict2items }}"
      loop_control:
        loop_var: __r_logstash_confd_item
      notify:
        _r_logstash_configuration_changed

- name: Keystore management
  when:
    - r_logstash_keystore_password | d(false, true)
    - ('keystore' in r_logstash_configure_actions)
  block:
    - name: Manage keystore
      bartokit.elastic.logstash_keystore:
        force: "{{  'enforce_keystore' in r_logstash_configure_actions }}"
        credentials: "{{ r_logstash_keystore }}"

- name: SSL/TLS keystore management
  when:
    - ('ssl' in r_logstash_configure_actions)
    - r_logstash_configuration.server.ssl.enabled | default(false) | bool
  block:
    - name: Write the ssl key
      ansible.builtin.copy:
        content: "{{ r_logstash_configuration_ssl_key }}"
        dest: "{{ r_logstash_configuration.server.ssl.key }}"
        owner: root
        group: "{{ _r_logstash_group }}"
        mode: '0640'

    - name: Write the ssl key
      ansible.builtin.copy:
        content: "{{ r_logstash_configuration_ssl_certificate }}"
        dest: "{{ r_logstash_configuration.server.ssl.certificate }}"
        owner: root
        group: "{{ _r_logstash_group }}"
        mode: '0640'

    - name: Write the CA certificate
      ansible.builtin.copy:
        content: "{{ r_logstash_configuration_ssl_certificate_authorities }}"
        dest: "{{ r_logstash_configuration.elasticsearch.ssl.certificateAuthorities }}"
        owner: root
        group: "{{ _r_logstash_group }}"
        mode: '0660'
      when: r_logstash_configuration_ssl_certificate_authorities is truthy

- name: Flush handlers
  meta: flush_handlers